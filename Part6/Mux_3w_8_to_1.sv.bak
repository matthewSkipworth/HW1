module Mux_3w_8_to_1(S, A, B, C, D, E, F, G, H, M);

	input [2:0] S, A, B, C, D, E, F, G, H; 
	output reg [2:0] M;

	Mux_8_to_1 G1(S, A[0], B[0], C[0], D[0], E[0], F[0], G[0], H[0], M[0]);
	Mux_8_to_1 G1(S, A[1], B[1], C[1], D[1], E[1], F[1], G[1], H[1], M[1]);
	Mux_8_to_1 G1(S, A[2], B[2], C[2], D[2], E[2], F[2], G[2], H[2], M[2]);

endmodule

module Mux_8_to_1_testbench();

	logic [2:0] S;
	logic [2:0] A;
	logic [2:0] B;
	logic [2:0] C; 
	logic [2:0] D;
	logic [2:0] E; 
	logic [2:0] F;	
	logic [2:0] G;
	logic [2:0] H;
	logic [2:0] M;
	
	dut Mux_3w_8_to_1(S, A, B, C, D, E, F, G, H, M);

	//integer i;
	
	//for (i = 0; i < 111, i++) begin
	